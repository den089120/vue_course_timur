{
  "posts": [
    {
      "id": 1,
      "title": "json-server 1",
      "author": "typicode 1"
    },
    {
      "id": 2,
      "title": "json-server 2",
      "author": "typicode 2"
    },
    {
      "id": 3,
      "title": "json-server 3",
      "author": "typicode 3"
    },
    {
      "id": 4,
      "title": "json-server 4",
      "author": "typicode 4"
    }
  ],
  "users": [
    {
      "id": "1",
      "username": "admin",
      "password": "123",
      "role": "ADMIN",
      "avatar": "https://www.codingavatar.com/img/studio/apps.png"
    },
    {
      "id": "2",
      "username": "user",
      "password": "123",
      "role": "USER",
      "avatar": "https://www.codingavatar.com/img/studio/apps.png"
    }
  ],
  "articles": [
    {
      "id": "1",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 1022,
      "createdAt": "26.02.2022",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Cloudflare, американская компания, которая предоставляет услуги CDN и защиту от DDoS-атак, опубликовала пост на своём сайте с результатами анализа частоты обновления библиотек Javascript, используемых на сайтах. Для этого эксперты компании собрали данные из запросов сети доставки контента CDNJS.",
            "В рамках своего анализа эксперты рассмотрели самую популярную библиотеку JavaScript— jQuery. На этой диаграмме показано количество запросов, сделанных для выбранного списка версий jQuery за последние 12 месяцев.",
            "«Мы наблюдаем устойчивый рост запросов версии 3.4.1, которая была выпущена 2 мая 2019 года. Чего мы не видим, так это существенного снижения популярности старых версий. У версии 3.2.1 36 млн запросов в начале нашего сбора данных и 29 млн в конце. Снижение числа запросов составило примерно 20%»."
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "// abortController.js\n\nlet controller = new AbortController()\n\nexport const getControllerSignal = () => controller.signal\n\nexport const abortController = () => controller.abort()\n\nexport const reinitController = () => {\n  controller = new AbortController()\n}"
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "А иногда это приводит и к ошибкам. Например, у нас есть две страницы - страница соревнований и страница турниров, обе страницы имеют id в URL и данные запрашиваются по этому id. Когда пользователь быстро переходит со страницы турнира на страницу соревнования, то id турнира может подмениться на id соревнования, и тогда получится, что запрос пойдет на несуществующий для турнира id и упадет ошибка.",
            "Когда я столкнулся с этой проблемой, то первой мыслью было использовать AbortController для отмены таких “висящих” запросов, и я решил загуглить как это правильно сделать, но сразу же был крайне удивлен тем, что советы на stackoverflow или различные статьи как-то очень странно и скудно освещали эту проблему, иногда предлагая абсолютно нерабочие решения, поэтому и решено было написать эту статью, чтобы показать конкретный рабочий пример."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://t4.ftcdn.net/jpg/03/19/57/69/360_F_319576972_faDKjUJxyoOn8rRA4tINl3sQ92XCHlKn.jpg",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "3",
          "type": "CODE",
          "code": "// apiHelper.js\n\nimport { getControllerSignal } from '@/services/abortController'\n\nexport const callPrivateApi = async(method, url, ...args) => {\n  try {\n    const { data } = await privateApi[method](url, ...[...args, { signal: getControllerSignal() }])\n    ...\n  } catch ({ response }) {\n    ...\n  }\n}"
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "1",
      "text": "some comment 1",
      "articlesId": "1",
      "userId": "1"
    },
    {
      "id": "2",
      "text": "some comment 2",
      "articlesId": "1",
      "userId": "1"
    },
    {
      "id": "3",
      "text": "some comment 3",
      "articlesId": "1",
      "userId": "1"
    },
    {
      "id": "4",
      "text": "some comment 4",
      "articlesId": "1",
      "userId": "1"
    },
    {
      "text": "safdddfsg fg dfggdfgfd fdgfffffffffffffffffffffffffff ",
      "articlesId": "1",
      "userId": 1,
      "id": "O5s36FL"
    },
    {
      "text": "hi my dia frends",
      "articlesId": "1",
      "userId": "2",
      "id": "Asjdd66"
    },
    {
      "text": "wewqewq rewqer wewq",
      "articlesId": "1",
      "userId": "2",
      "id": "nN8clGR"
    },
    {
      "text": "qwewewq wrer rerewrwereewe",
      "articlesId": "1",
      "userId": "2",
      "id": "0pco2Xf"
    },
    {
      "text": "wweaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      "articlesId": "1",
      "userId": "2",
      "id": "OdJzF2m"
    },
    {
      "text": "eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
      "articlesId": "1",
      "userId": "2",
      "id": "FspqPuw"
    }
  ],
  "profile": [
    {
      "id": "1",
      "firstname": "Danil",
      "lastname": "Ann",
      "age": "43",
      "currency": "RUB",
      "country": "China",
      "username": "dan",
      "avatar": "https://www.codingavatar.com/img/studio/apps.png"
    },
    {
      "id": "2",
      "firstname": "Anna",
      "lastname": "Daniilovna",
      "age": "13",
      "currency": "RUB",
      "country": "China",
      "username": "ann",
      "avatar": "https://www.codingavatar.com/img/studio/apps.png"
    }
  ]
}